/* 
 * @(#)FgwBm.java        1.0 09/12/14
 *
 * This file has been auto-generated by JNC, the
 * Java output format plug-in of pyang.
 * Origin: module "hcta-epc", revision: "2014-09-18".
 */

package hctaEpc.fgw.statistics;

import ERabRelease;

import Element;

import ElementChildrenIterator;

import Epc;

import JNCException;

import Procedure;

import com.tailf.jnc.YangElement;

/**
 * This class represents an element from 
 * the namespace http://hitachi-cta.com/ns/epc
 * generated to "src/hctaEpc/fgw/statistics/fgwBm"
 * <p>
 * See line 2413 in
 * oamPmServerCli.yang
 *
 * @version 1.0 2014-12-09
 * @author Auto Generated
 */
public class FgwBm extends YangElement {

    private static final long serialVersionUID = 1L;

    /**
     * Constructor for an empty FgwBm object.
     */
    public FgwBm() {
        super(Epc.NAMESPACE, "fgwBm");
    }

    /**
     * Clones this object, returning an exact copy.
     * @return A clone of the object.
     */
    public FgwBm clone() {
        return (FgwBm)cloneContent(new FgwBm());
    }

    /**
     * Clones this object, returning a shallow copy.
     * @return A clone of the object. Children are not included.
     */
    public FgwBm cloneShallow() {
        return (FgwBm)cloneShallowContent(new FgwBm());
    }

    /**
     * @return An array with the identifiers of any key children
     */
    public String[] keyNames() {
        return null;
    }

    /**
     * @return An array with the identifiers of any children, in order.
     */
    public String[] childrenNames() {
        return new String[] {
            "eRabRelease",
            "procedure",
        };
    }

    /* Access methods for list child: "eRabRelease". */

    /**
     * Gets list entry "eRabRelease", with specified keys.
     */
    public ERabRelease getERabRelease() throws JNCException {
        String path = "eRabRelease";
        return (ERabRelease)searchOne(path);
    }

    /**
     * Iterator method for the list "eRabRelease".
     * @return An iterator for the list.
     */
    public ElementChildrenIterator eRabReleaseIterator() {
        return new ElementChildrenIterator(children, "eRabRelease");
    }

    /**
     * Adds list entry "eRabRelease", using an existing object.
     * @param eRabRelease The object to add.
     * @return The added child.
     */
    public ERabRelease addERabRelease(ERabRelease eRabRelease)
            throws JNCException {
        insertChild(eRabRelease, childrenNames());
        return eRabRelease;
    }

    /**
     * Adds list entry "eRabRelease".
     * This method is used for creating subtree filters.
     * @return The added child.
     */
    public ERabRelease addERabRelease() throws JNCException {
        ERabRelease eRabRelease = new ERabRelease();
        insertChild(eRabRelease, childrenNames());
        return eRabRelease;
    }

    /**
     * Deletes list entry "eRabRelease", with specified keys.
     */
    public void deleteERabRelease() throws JNCException {
        String path = "eRabRelease";
        delete(path);
    }

    /* Access methods for list child: "procedure". */

    /**
     * Gets list entry "procedure", with specified keys.
     */
    public Procedure getProcedure() throws JNCException {
        String path = "procedure";
        return (Procedure)searchOne(path);
    }

    /**
     * Iterator method for the list "procedure".
     * @return An iterator for the list.
     */
    public ElementChildrenIterator procedureIterator() {
        return new ElementChildrenIterator(children, "procedure");
    }

    /**
     * Adds list entry "procedure", using an existing object.
     * @param procedure The object to add.
     * @return The added child.
     */
    public Procedure addProcedure(Procedure procedure) throws JNCException {
        insertChild(procedure, childrenNames());
        return procedure;
    }

    /**
     * Adds list entry "procedure".
     * This method is used for creating subtree filters.
     * @return The added child.
     */
    public Procedure addProcedure() throws JNCException {
        Procedure procedure = new Procedure();
        insertChild(procedure, childrenNames());
        return procedure;
    }

    /**
     * Deletes list entry "procedure", with specified keys.
     */
    public void deleteProcedure() throws JNCException {
        String path = "procedure";
        delete(path);
    }

    /**
     * Support method for addChild.
     * Adds a child to this object.
     * 
     * @param child The child to add
     */
    public void addChild(Element child) {
        super.addChild(child);
    }

}
