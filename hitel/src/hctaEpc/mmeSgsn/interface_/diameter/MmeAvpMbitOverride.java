/* 
 * @(#)MmeAvpMbitOverride.java        1.0 09/12/14
 *
 * This file has been auto-generated by JNC, the
 * Java output format plug-in of pyang.
 * Origin: module "hcta-epc", revision: "2014-09-18".
 */

package hctaEpc.mmeSgsn.interface_.diameter;

import Element;

import Epc;

import JNCException;

import Leaf;

import YangUInt16;

import com.tailf.jnc.YangElement;
import com.tailf.jnc.YangEnumeration;

/**
 * This class represents an element from 
 * the namespace http://hitachi-cta.com/ns/epc
 * generated to "src/hctaEpc/mmeSgsn/interface_/diameter/mme-avp-mbit-override"
 * <p>
 * See line 533 in
 * dcConfig.yang
 *
 * @version 1.0 2014-12-09
 * @author Auto Generated
 */
public class MmeAvpMbitOverride extends YangElement {

    private static final long serialVersionUID = 1L;

    /**
     * Constructor for an empty MmeAvpMbitOverride object.
     */
    public MmeAvpMbitOverride() {
        super(Epc.NAMESPACE, "mme-avp-mbit-override");
    }

    /**
     * Constructor for an initialized MmeAvpMbitOverride object,
     * 
     * @param avpCodeValue Key argument of child.
     */
    public MmeAvpMbitOverride(YangUInt16 avpCodeValue) throws JNCException {
        super(Epc.NAMESPACE, "mme-avp-mbit-override");
        Leaf avpCode = new Leaf(Epc.NAMESPACE, "avp-code");
        avpCode.setValue(avpCodeValue);
        insertChild(avpCode, childrenNames());
    }

    /**
     * Constructor for an initialized MmeAvpMbitOverride object,
     * with String keys.
     * @param avpCodeValue Key argument of child.
     */
    public MmeAvpMbitOverride(String avpCodeValue) throws JNCException {
        super(Epc.NAMESPACE, "mme-avp-mbit-override");
        Leaf avpCode = new Leaf(Epc.NAMESPACE, "avp-code");
        avpCode.setValue(new YangUInt16(avpCodeValue));
        insertChild(avpCode, childrenNames());
    }

    /**
     * Constructor for an initialized MmeAvpMbitOverride object,
     * with keys of built in Java types.
     * @param avpCodeValue Key argument of child.
     */
    public MmeAvpMbitOverride(int avpCodeValue) throws JNCException {
        super(Epc.NAMESPACE, "mme-avp-mbit-override");
        Leaf avpCode = new Leaf(Epc.NAMESPACE, "avp-code");
        avpCode.setValue(new YangUInt16(avpCodeValue));
        insertChild(avpCode, childrenNames());
    }

    /**
     * Clones this object, returning an exact copy.
     * @return A clone of the object.
     */
    public MmeAvpMbitOverride clone() {
        MmeAvpMbitOverride copy;
        try {
            copy = new MmeAvpMbitOverride(getAvpCodeValue().toString());
        } catch (JNCException e) {
            copy = null;
        }
        return (MmeAvpMbitOverride)cloneContent(copy);
    }

    /**
     * Clones this object, returning a shallow copy.
     * @return A clone of the object. Children are not included.
     */
    public MmeAvpMbitOverride cloneShallow() {
        MmeAvpMbitOverride copy;
        try {
            copy = new MmeAvpMbitOverride(getAvpCodeValue().toString());
        } catch (JNCException e) {
            copy = null;
        }
        return (MmeAvpMbitOverride)cloneShallowContent(copy);
    }

    /**
     * @return An array with the identifiers of any key children
     */
    public String[] keyNames() {
        return new String[] {
            "avp-code",
        };
    }

    /**
     * @return An array with the identifiers of any children, in order.
     */
    public String[] childrenNames() {
        return new String[] {
            "avp-code",
            "application-identifier",
        };
    }

    /* Access methods for leaf child: "avp-code". */

    /**
     * Gets the value for child leaf "avp-code".
     * @return The value of the leaf.
     */
    public YangUInt16 getAvpCodeValue() throws JNCException {
        return (YangUInt16)getValue("avp-code");
    }

    /**
     * Sets the value for child leaf "avp-code",
     * using instance of generated typedef class.
     * @param avpCodeValue The value to set.
     * @param avpCodeValue used during instantiation.
     */
    public void setAvpCodeValue(YangUInt16 avpCodeValue) throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "avp-code",
            avpCodeValue,
            childrenNames());
    }

    /**
     * Sets the value for child leaf "avp-code",
     * using Java primitive values.
     * @param avpCodeValue used during instantiation.
     */
    public void setAvpCodeValue(int avpCodeValue) throws JNCException {
        setAvpCodeValue(new YangUInt16(avpCodeValue));
    }

    /**
     * Sets the value for child leaf "avp-code",
     * using a String value.
     * @param avpCodeValue used during instantiation.
     */
    public void setAvpCodeValue(String avpCodeValue) throws JNCException {
        setAvpCodeValue(new YangUInt16(avpCodeValue));
    }

    /**
     * This method is used for creating a subtree filter.
     * The added "avp-code" leaf will not have a value.
     */
    public void addAvpCode() throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "avp-code",
            null,
            childrenNames());
    }

    /* Access methods for optional leaf child: "application-identifier". */

    /**
     * Gets the value for child leaf "application-identifier".
     * @return The value of the leaf.
     */
    public YangEnumeration getApplicationIdentifierValue() throws JNCException {
        YangEnumeration applicationIdentifier = (YangEnumeration)getValue("application-identifier");
        if (applicationIdentifier == null) {
            applicationIdentifier = new YangEnumeration("base", new String[] {  // default
                "s6",
                "s13",
                "slg",
                "base",
            });
        }
        return applicationIdentifier;
    }

    /**
     * Sets the value for child leaf "application-identifier",
     * using instance of generated typedef class.
     * @param applicationIdentifierValue The value to set.
     * @param applicationIdentifierValue used during instantiation.
     */
    public void setApplicationIdentifierValue(YangEnumeration applicationIdentifierValue)
            throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "application-identifier",
            applicationIdentifierValue,
            childrenNames());
    }

    /**
     * Sets the value for child leaf "application-identifier",
     * using a String value.
     * @param applicationIdentifierValue used during instantiation.
     */
    public void setApplicationIdentifierValue(String applicationIdentifierValue)
            throws JNCException {
        setApplicationIdentifierValue(new YangEnumeration(applicationIdentifierValue, new String[] {
             "s6",
             "s13",
             "slg",
             "base",
        }));
    }

    /**
     * Unsets the value for child leaf "application-identifier".
     */
    public void unsetApplicationIdentifierValue() throws JNCException {
        delete("application-identifier");
    }

    /**
     * This method is used for creating a subtree filter.
     * The added "application-identifier" leaf will not have a value.
     */
    public void addApplicationIdentifier() throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "application-identifier",
            null,
            childrenNames());
    }

    /**
     * Marks the leaf "application-identifier" with operation "replace".
     */
    public void markApplicationIdentifierReplace() throws JNCException {
        markLeafReplace("applicationIdentifier");
    }

    /**
     * Marks the leaf "application-identifier" with operation "merge".
     */
    public void markApplicationIdentifierMerge() throws JNCException {
        markLeafMerge("applicationIdentifier");
    }

    /**
     * Marks the leaf "application-identifier" with operation "create".
     */
    public void markApplicationIdentifierCreate() throws JNCException {
        markLeafCreate("applicationIdentifier");
    }

    /**
     * Marks the leaf "application-identifier" with operation "delete".
     */
    public void markApplicationIdentifierDelete() throws JNCException {
        markLeafDelete("applicationIdentifier");
    }

    /**
     * Support method for addChild.
     * Adds a child to this object.
     * 
     * @param child The child to add
     */
    public void addChild(Element child) {
        super.addChild(child);
    }

}
