/* 
 * @(#)MmeNasSm.java        1.0 09/12/14
 *
 * This file has been auto-generated by JNC, the
 * Java output format plug-in of pyang.
 * Origin: module "hcta-epc", revision: "2014-09-18".
 */

package hctaEpc.mmeSgsn.interface_.nas;

import Element;

import Epc;

import JNCException;

import com.tailf.jnc.YangElement;
import com.tailf.jnc.YangEnumeration;
import com.tailf.jnc.YangUInt8;

/**
 * This class represents an element from 
 * the namespace http://hitachi-cta.com/ns/epc
 * generated to "src/hctaEpc/mmeSgsn/interface_/nas/mme-nas-sm"
 * <p>
 * See line 442 in
 * scConfig.yang
 *
 * @version 1.0 2014-12-09
 * @author Auto Generated
 */
public class MmeNasSm extends YangElement {

    private static final long serialVersionUID = 1L;

    /**
     * Constructor for an empty MmeNasSm object.
     */
    public MmeNasSm() {
        super(Epc.NAMESPACE, "mme-nas-sm");
    }

    /**
     * Clones this object, returning an exact copy.
     * @return A clone of the object.
     */
    public MmeNasSm clone() {
        return (MmeNasSm)cloneContent(new MmeNasSm());
    }

    /**
     * Clones this object, returning a shallow copy.
     * @return A clone of the object. Children are not included.
     */
    public MmeNasSm cloneShallow() {
        return (MmeNasSm)cloneShallowContent(new MmeNasSm());
    }

    /**
     * @return An array with the identifiers of any key children
     */
    public String[] keyNames() {
        return null;
    }

    /**
     * @return An array with the identifiers of any children, in order.
     */
    public String[] childrenNames() {
        return new String[] {
            "activate-bearer-t3485",
            "activate-bearer-retry-n3485",
            "modify-bearer-t3486",
            "modify-bearer-retry-n3486",
            "esm-info-t3489",
            "esm-info-retry-n3489",
            "deactivate-bearer-t3495",
            "deactivate-bearer-retry-n3495",
            "max-bearers-per-ue",
            "max-pdn-conn-per-ue",
            "deactivate-bearer-page-fail",
            "pgw-ip-type",
            "deactivate-bearer-enodeb-fail",
            "pcscf-restore-mod-fail-action",
        };
    }

    /* Access methods for optional leaf child: "activate-bearer-t3485". */

    /**
     * Gets the value for child leaf "activate-bearer-t3485".
     * @return The value of the leaf.
     */
    public YangUInt8 getActivateBearerT3485Value() throws JNCException {
        YangUInt8 activateBearerT3485 = (YangUInt8)getValue("activate-bearer-t3485");
        if (activateBearerT3485 == null) {
            activateBearerT3485 = new YangUInt8("5");  // default
        }
        return activateBearerT3485;
    }

    /**
     * Sets the value for child leaf "activate-bearer-t3485",
     * using instance of generated typedef class.
     * @param activateBearerT3485Value The value to set.
     * @param activateBearerT3485Value used during instantiation.
     */
    public void setActivateBearerT3485Value(YangUInt8 activateBearerT3485Value)
            throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "activate-bearer-t3485",
            activateBearerT3485Value,
            childrenNames());
    }

    /**
     * Sets the value for child leaf "activate-bearer-t3485",
     * using Java primitive values.
     * @param activateBearerT3485Value used during instantiation.
     */
    public void setActivateBearerT3485Value(short activateBearerT3485Value)
            throws JNCException {
        setActivateBearerT3485Value(new YangUInt8(activateBearerT3485Value));
    }

    /**
     * Sets the value for child leaf "activate-bearer-t3485",
     * using a String value.
     * @param activateBearerT3485Value used during instantiation.
     */
    public void setActivateBearerT3485Value(String activateBearerT3485Value)
            throws JNCException {
        setActivateBearerT3485Value(new YangUInt8(activateBearerT3485Value));
    }

    /**
     * Unsets the value for child leaf "activate-bearer-t3485".
     */
    public void unsetActivateBearerT3485Value() throws JNCException {
        delete("activate-bearer-t3485");
    }

    /**
     * This method is used for creating a subtree filter.
     * The added "activate-bearer-t3485" leaf will not have a value.
     */
    public void addActivateBearerT3485() throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "activate-bearer-t3485",
            null,
            childrenNames());
    }

    /**
     * Marks the leaf "activate-bearer-t3485" with operation "replace".
     */
    public void markActivateBearerT3485Replace() throws JNCException {
        markLeafReplace("activateBearerT3485");
    }

    /**
     * Marks the leaf "activate-bearer-t3485" with operation "merge".
     */
    public void markActivateBearerT3485Merge() throws JNCException {
        markLeafMerge("activateBearerT3485");
    }

    /**
     * Marks the leaf "activate-bearer-t3485" with operation "create".
     */
    public void markActivateBearerT3485Create() throws JNCException {
        markLeafCreate("activateBearerT3485");
    }

    /**
     * Marks the leaf "activate-bearer-t3485" with operation "delete".
     */
    public void markActivateBearerT3485Delete() throws JNCException {
        markLeafDelete("activateBearerT3485");
    }

    /* Access methods for optional leaf child: "activate-bearer-retry-n3485". */

    /**
     * Gets the value for child leaf "activate-bearer-retry-n3485".
     * @return The value of the leaf.
     */
    public YangUInt8 getActivateBearerRetryN3485Value() throws JNCException {
        YangUInt8 activateBearerRetryN3485 = (YangUInt8)getValue("activate-bearer-retry-n3485");
        if (activateBearerRetryN3485 == null) {
            activateBearerRetryN3485 = new YangUInt8("2");  // default
        }
        return activateBearerRetryN3485;
    }

    /**
     * Sets the value for child leaf "activate-bearer-retry-n3485",
     * using instance of generated typedef class.
     * @param activateBearerRetryN3485Value The value to set.
     * @param activateBearerRetryN3485Value used during instantiation.
     */
    public void setActivateBearerRetryN3485Value(YangUInt8 activateBearerRetryN3485Value)
            throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "activate-bearer-retry-n3485",
            activateBearerRetryN3485Value,
            childrenNames());
    }

    /**
     * Sets the value for child leaf "activate-bearer-retry-n3485",
     * using Java primitive values.
     * @param activateBearerRetryN3485Value used during instantiation.
     */
    public void setActivateBearerRetryN3485Value(short activateBearerRetryN3485Value)
            throws JNCException {
        setActivateBearerRetryN3485Value(new YangUInt8(activateBearerRetryN3485Value));
    }

    /**
     * Sets the value for child leaf "activate-bearer-retry-n3485",
     * using a String value.
     * @param activateBearerRetryN3485Value used during instantiation.
     */
    public void setActivateBearerRetryN3485Value(String activateBearerRetryN3485Value)
            throws JNCException {
        setActivateBearerRetryN3485Value(new YangUInt8(activateBearerRetryN3485Value));
    }

    /**
     * Unsets the value for child leaf "activate-bearer-retry-n3485".
     */
    public void unsetActivateBearerRetryN3485Value() throws JNCException {
        delete("activate-bearer-retry-n3485");
    }

    /**
     * This method is used for creating a subtree filter.
     * The added "activate-bearer-retry-n3485" leaf will not have a value.
     */
    public void addActivateBearerRetryN3485() throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "activate-bearer-retry-n3485",
            null,
            childrenNames());
    }

    /**
     * Marks the leaf "activate-bearer-retry-n3485" with operation "replace".
     */
    public void markActivateBearerRetryN3485Replace() throws JNCException {
        markLeafReplace("activateBearerRetryN3485");
    }

    /**
     * Marks the leaf "activate-bearer-retry-n3485" with operation "merge".
     */
    public void markActivateBearerRetryN3485Merge() throws JNCException {
        markLeafMerge("activateBearerRetryN3485");
    }

    /**
     * Marks the leaf "activate-bearer-retry-n3485" with operation "create".
     */
    public void markActivateBearerRetryN3485Create() throws JNCException {
        markLeafCreate("activateBearerRetryN3485");
    }

    /**
     * Marks the leaf "activate-bearer-retry-n3485" with operation "delete".
     */
    public void markActivateBearerRetryN3485Delete() throws JNCException {
        markLeafDelete("activateBearerRetryN3485");
    }

    /* Access methods for optional leaf child: "modify-bearer-t3486". */

    /**
     * Gets the value for child leaf "modify-bearer-t3486".
     * @return The value of the leaf.
     */
    public YangUInt8 getModifyBearerT3486Value() throws JNCException {
        YangUInt8 modifyBearerT3486 = (YangUInt8)getValue("modify-bearer-t3486");
        if (modifyBearerT3486 == null) {
            modifyBearerT3486 = new YangUInt8("5");  // default
        }
        return modifyBearerT3486;
    }

    /**
     * Sets the value for child leaf "modify-bearer-t3486",
     * using instance of generated typedef class.
     * @param modifyBearerT3486Value The value to set.
     * @param modifyBearerT3486Value used during instantiation.
     */
    public void setModifyBearerT3486Value(YangUInt8 modifyBearerT3486Value)
            throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "modify-bearer-t3486",
            modifyBearerT3486Value,
            childrenNames());
    }

    /**
     * Sets the value for child leaf "modify-bearer-t3486",
     * using Java primitive values.
     * @param modifyBearerT3486Value used during instantiation.
     */
    public void setModifyBearerT3486Value(short modifyBearerT3486Value)
            throws JNCException {
        setModifyBearerT3486Value(new YangUInt8(modifyBearerT3486Value));
    }

    /**
     * Sets the value for child leaf "modify-bearer-t3486",
     * using a String value.
     * @param modifyBearerT3486Value used during instantiation.
     */
    public void setModifyBearerT3486Value(String modifyBearerT3486Value)
            throws JNCException {
        setModifyBearerT3486Value(new YangUInt8(modifyBearerT3486Value));
    }

    /**
     * Unsets the value for child leaf "modify-bearer-t3486".
     */
    public void unsetModifyBearerT3486Value() throws JNCException {
        delete("modify-bearer-t3486");
    }

    /**
     * This method is used for creating a subtree filter.
     * The added "modify-bearer-t3486" leaf will not have a value.
     */
    public void addModifyBearerT3486() throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "modify-bearer-t3486",
            null,
            childrenNames());
    }

    /**
     * Marks the leaf "modify-bearer-t3486" with operation "replace".
     */
    public void markModifyBearerT3486Replace() throws JNCException {
        markLeafReplace("modifyBearerT3486");
    }

    /**
     * Marks the leaf "modify-bearer-t3486" with operation "merge".
     */
    public void markModifyBearerT3486Merge() throws JNCException {
        markLeafMerge("modifyBearerT3486");
    }

    /**
     * Marks the leaf "modify-bearer-t3486" with operation "create".
     */
    public void markModifyBearerT3486Create() throws JNCException {
        markLeafCreate("modifyBearerT3486");
    }

    /**
     * Marks the leaf "modify-bearer-t3486" with operation "delete".
     */
    public void markModifyBearerT3486Delete() throws JNCException {
        markLeafDelete("modifyBearerT3486");
    }

    /* Access methods for optional leaf child: "modify-bearer-retry-n3486". */

    /**
     * Gets the value for child leaf "modify-bearer-retry-n3486".
     * @return The value of the leaf.
     */
    public YangUInt8 getModifyBearerRetryN3486Value() throws JNCException {
        YangUInt8 modifyBearerRetryN3486 = (YangUInt8)getValue("modify-bearer-retry-n3486");
        if (modifyBearerRetryN3486 == null) {
            modifyBearerRetryN3486 = new YangUInt8("2");  // default
        }
        return modifyBearerRetryN3486;
    }

    /**
     * Sets the value for child leaf "modify-bearer-retry-n3486",
     * using instance of generated typedef class.
     * @param modifyBearerRetryN3486Value The value to set.
     * @param modifyBearerRetryN3486Value used during instantiation.
     */
    public void setModifyBearerRetryN3486Value(YangUInt8 modifyBearerRetryN3486Value)
            throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "modify-bearer-retry-n3486",
            modifyBearerRetryN3486Value,
            childrenNames());
    }

    /**
     * Sets the value for child leaf "modify-bearer-retry-n3486",
     * using Java primitive values.
     * @param modifyBearerRetryN3486Value used during instantiation.
     */
    public void setModifyBearerRetryN3486Value(short modifyBearerRetryN3486Value)
            throws JNCException {
        setModifyBearerRetryN3486Value(new YangUInt8(modifyBearerRetryN3486Value));
    }

    /**
     * Sets the value for child leaf "modify-bearer-retry-n3486",
     * using a String value.
     * @param modifyBearerRetryN3486Value used during instantiation.
     */
    public void setModifyBearerRetryN3486Value(String modifyBearerRetryN3486Value)
            throws JNCException {
        setModifyBearerRetryN3486Value(new YangUInt8(modifyBearerRetryN3486Value));
    }

    /**
     * Unsets the value for child leaf "modify-bearer-retry-n3486".
     */
    public void unsetModifyBearerRetryN3486Value() throws JNCException {
        delete("modify-bearer-retry-n3486");
    }

    /**
     * This method is used for creating a subtree filter.
     * The added "modify-bearer-retry-n3486" leaf will not have a value.
     */
    public void addModifyBearerRetryN3486() throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "modify-bearer-retry-n3486",
            null,
            childrenNames());
    }

    /**
     * Marks the leaf "modify-bearer-retry-n3486" with operation "replace".
     */
    public void markModifyBearerRetryN3486Replace() throws JNCException {
        markLeafReplace("modifyBearerRetryN3486");
    }

    /**
     * Marks the leaf "modify-bearer-retry-n3486" with operation "merge".
     */
    public void markModifyBearerRetryN3486Merge() throws JNCException {
        markLeafMerge("modifyBearerRetryN3486");
    }

    /**
     * Marks the leaf "modify-bearer-retry-n3486" with operation "create".
     */
    public void markModifyBearerRetryN3486Create() throws JNCException {
        markLeafCreate("modifyBearerRetryN3486");
    }

    /**
     * Marks the leaf "modify-bearer-retry-n3486" with operation "delete".
     */
    public void markModifyBearerRetryN3486Delete() throws JNCException {
        markLeafDelete("modifyBearerRetryN3486");
    }

    /* Access methods for optional leaf child: "esm-info-t3489". */

    /**
     * Gets the value for child leaf "esm-info-t3489".
     * @return The value of the leaf.
     */
    public YangUInt8 getEsmInfoT3489Value() throws JNCException {
        YangUInt8 esmInfoT3489 = (YangUInt8)getValue("esm-info-t3489");
        if (esmInfoT3489 == null) {
            esmInfoT3489 = new YangUInt8("4");  // default
        }
        return esmInfoT3489;
    }

    /**
     * Sets the value for child leaf "esm-info-t3489",
     * using instance of generated typedef class.
     * @param esmInfoT3489Value The value to set.
     * @param esmInfoT3489Value used during instantiation.
     */
    public void setEsmInfoT3489Value(YangUInt8 esmInfoT3489Value)
            throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "esm-info-t3489",
            esmInfoT3489Value,
            childrenNames());
    }

    /**
     * Sets the value for child leaf "esm-info-t3489",
     * using Java primitive values.
     * @param esmInfoT3489Value used during instantiation.
     */
    public void setEsmInfoT3489Value(short esmInfoT3489Value)
            throws JNCException {
        setEsmInfoT3489Value(new YangUInt8(esmInfoT3489Value));
    }

    /**
     * Sets the value for child leaf "esm-info-t3489",
     * using a String value.
     * @param esmInfoT3489Value used during instantiation.
     */
    public void setEsmInfoT3489Value(String esmInfoT3489Value)
            throws JNCException {
        setEsmInfoT3489Value(new YangUInt8(esmInfoT3489Value));
    }

    /**
     * Unsets the value for child leaf "esm-info-t3489".
     */
    public void unsetEsmInfoT3489Value() throws JNCException {
        delete("esm-info-t3489");
    }

    /**
     * This method is used for creating a subtree filter.
     * The added "esm-info-t3489" leaf will not have a value.
     */
    public void addEsmInfoT3489() throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "esm-info-t3489",
            null,
            childrenNames());
    }

    /**
     * Marks the leaf "esm-info-t3489" with operation "replace".
     */
    public void markEsmInfoT3489Replace() throws JNCException {
        markLeafReplace("esmInfoT3489");
    }

    /**
     * Marks the leaf "esm-info-t3489" with operation "merge".
     */
    public void markEsmInfoT3489Merge() throws JNCException {
        markLeafMerge("esmInfoT3489");
    }

    /**
     * Marks the leaf "esm-info-t3489" with operation "create".
     */
    public void markEsmInfoT3489Create() throws JNCException {
        markLeafCreate("esmInfoT3489");
    }

    /**
     * Marks the leaf "esm-info-t3489" with operation "delete".
     */
    public void markEsmInfoT3489Delete() throws JNCException {
        markLeafDelete("esmInfoT3489");
    }

    /* Access methods for optional leaf child: "esm-info-retry-n3489". */

    /**
     * Gets the value for child leaf "esm-info-retry-n3489".
     * @return The value of the leaf.
     */
    public YangUInt8 getEsmInfoRetryN3489Value() throws JNCException {
        YangUInt8 esmInfoRetryN3489 = (YangUInt8)getValue("esm-info-retry-n3489");
        if (esmInfoRetryN3489 == null) {
            esmInfoRetryN3489 = new YangUInt8("2");  // default
        }
        return esmInfoRetryN3489;
    }

    /**
     * Sets the value for child leaf "esm-info-retry-n3489",
     * using instance of generated typedef class.
     * @param esmInfoRetryN3489Value The value to set.
     * @param esmInfoRetryN3489Value used during instantiation.
     */
    public void setEsmInfoRetryN3489Value(YangUInt8 esmInfoRetryN3489Value)
            throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "esm-info-retry-n3489",
            esmInfoRetryN3489Value,
            childrenNames());
    }

    /**
     * Sets the value for child leaf "esm-info-retry-n3489",
     * using Java primitive values.
     * @param esmInfoRetryN3489Value used during instantiation.
     */
    public void setEsmInfoRetryN3489Value(short esmInfoRetryN3489Value)
            throws JNCException {
        setEsmInfoRetryN3489Value(new YangUInt8(esmInfoRetryN3489Value));
    }

    /**
     * Sets the value for child leaf "esm-info-retry-n3489",
     * using a String value.
     * @param esmInfoRetryN3489Value used during instantiation.
     */
    public void setEsmInfoRetryN3489Value(String esmInfoRetryN3489Value)
            throws JNCException {
        setEsmInfoRetryN3489Value(new YangUInt8(esmInfoRetryN3489Value));
    }

    /**
     * Unsets the value for child leaf "esm-info-retry-n3489".
     */
    public void unsetEsmInfoRetryN3489Value() throws JNCException {
        delete("esm-info-retry-n3489");
    }

    /**
     * This method is used for creating a subtree filter.
     * The added "esm-info-retry-n3489" leaf will not have a value.
     */
    public void addEsmInfoRetryN3489() throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "esm-info-retry-n3489",
            null,
            childrenNames());
    }

    /**
     * Marks the leaf "esm-info-retry-n3489" with operation "replace".
     */
    public void markEsmInfoRetryN3489Replace() throws JNCException {
        markLeafReplace("esmInfoRetryN3489");
    }

    /**
     * Marks the leaf "esm-info-retry-n3489" with operation "merge".
     */
    public void markEsmInfoRetryN3489Merge() throws JNCException {
        markLeafMerge("esmInfoRetryN3489");
    }

    /**
     * Marks the leaf "esm-info-retry-n3489" with operation "create".
     */
    public void markEsmInfoRetryN3489Create() throws JNCException {
        markLeafCreate("esmInfoRetryN3489");
    }

    /**
     * Marks the leaf "esm-info-retry-n3489" with operation "delete".
     */
    public void markEsmInfoRetryN3489Delete() throws JNCException {
        markLeafDelete("esmInfoRetryN3489");
    }

    /* Access methods for optional leaf child: "deactivate-bearer-t3495". */

    /**
     * Gets the value for child leaf "deactivate-bearer-t3495".
     * @return The value of the leaf.
     */
    public YangUInt8 getDeactivateBearerT3495Value() throws JNCException {
        YangUInt8 deactivateBearerT3495 = (YangUInt8)getValue("deactivate-bearer-t3495");
        if (deactivateBearerT3495 == null) {
            deactivateBearerT3495 = new YangUInt8("5");  // default
        }
        return deactivateBearerT3495;
    }

    /**
     * Sets the value for child leaf "deactivate-bearer-t3495",
     * using instance of generated typedef class.
     * @param deactivateBearerT3495Value The value to set.
     * @param deactivateBearerT3495Value used during instantiation.
     */
    public void setDeactivateBearerT3495Value(YangUInt8 deactivateBearerT3495Value)
            throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "deactivate-bearer-t3495",
            deactivateBearerT3495Value,
            childrenNames());
    }

    /**
     * Sets the value for child leaf "deactivate-bearer-t3495",
     * using Java primitive values.
     * @param deactivateBearerT3495Value used during instantiation.
     */
    public void setDeactivateBearerT3495Value(short deactivateBearerT3495Value)
            throws JNCException {
        setDeactivateBearerT3495Value(new YangUInt8(deactivateBearerT3495Value));
    }

    /**
     * Sets the value for child leaf "deactivate-bearer-t3495",
     * using a String value.
     * @param deactivateBearerT3495Value used during instantiation.
     */
    public void setDeactivateBearerT3495Value(String deactivateBearerT3495Value)
            throws JNCException {
        setDeactivateBearerT3495Value(new YangUInt8(deactivateBearerT3495Value));
    }

    /**
     * Unsets the value for child leaf "deactivate-bearer-t3495".
     */
    public void unsetDeactivateBearerT3495Value() throws JNCException {
        delete("deactivate-bearer-t3495");
    }

    /**
     * This method is used for creating a subtree filter.
     * The added "deactivate-bearer-t3495" leaf will not have a value.
     */
    public void addDeactivateBearerT3495() throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "deactivate-bearer-t3495",
            null,
            childrenNames());
    }

    /**
     * Marks the leaf "deactivate-bearer-t3495" with operation "replace".
     */
    public void markDeactivateBearerT3495Replace() throws JNCException {
        markLeafReplace("deactivateBearerT3495");
    }

    /**
     * Marks the leaf "deactivate-bearer-t3495" with operation "merge".
     */
    public void markDeactivateBearerT3495Merge() throws JNCException {
        markLeafMerge("deactivateBearerT3495");
    }

    /**
     * Marks the leaf "deactivate-bearer-t3495" with operation "create".
     */
    public void markDeactivateBearerT3495Create() throws JNCException {
        markLeafCreate("deactivateBearerT3495");
    }

    /**
     * Marks the leaf "deactivate-bearer-t3495" with operation "delete".
     */
    public void markDeactivateBearerT3495Delete() throws JNCException {
        markLeafDelete("deactivateBearerT3495");
    }

    /* Access methods for optional leaf child: "deactivate-bearer-retry-n3495". */

    /**
     * Gets the value for child leaf "deactivate-bearer-retry-n3495".
     * @return The value of the leaf.
     */
    public YangUInt8 getDeactivateBearerRetryN3495Value() throws JNCException {
        YangUInt8 deactivateBearerRetryN3495 = (YangUInt8)getValue("deactivate-bearer-retry-n3495");
        if (deactivateBearerRetryN3495 == null) {
            deactivateBearerRetryN3495 = new YangUInt8("2");  // default
        }
        return deactivateBearerRetryN3495;
    }

    /**
     * Sets the value for child leaf "deactivate-bearer-retry-n3495",
     * using instance of generated typedef class.
     * @param deactivateBearerRetryN3495Value The value to set.
     * @param deactivateBearerRetryN3495Value used during instantiation.
     */
    public void setDeactivateBearerRetryN3495Value(YangUInt8 deactivateBearerRetryN3495Value)
            throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "deactivate-bearer-retry-n3495",
            deactivateBearerRetryN3495Value,
            childrenNames());
    }

    /**
     * Sets the value for child leaf "deactivate-bearer-retry-n3495",
     * using Java primitive values.
     * @param deactivateBearerRetryN3495Value used during instantiation.
     */
    public void setDeactivateBearerRetryN3495Value(short deactivateBearerRetryN3495Value)
            throws JNCException {
        setDeactivateBearerRetryN3495Value(new YangUInt8(deactivateBearerRetryN3495Value));
    }

    /**
     * Sets the value for child leaf "deactivate-bearer-retry-n3495",
     * using a String value.
     * @param deactivateBearerRetryN3495Value used during instantiation.
     */
    public void setDeactivateBearerRetryN3495Value(String deactivateBearerRetryN3495Value)
            throws JNCException {
        setDeactivateBearerRetryN3495Value(new YangUInt8(deactivateBearerRetryN3495Value));
    }

    /**
     * Unsets the value for child leaf "deactivate-bearer-retry-n3495".
     */
    public void unsetDeactivateBearerRetryN3495Value() throws JNCException {
        delete("deactivate-bearer-retry-n3495");
    }

    /**
     * This method is used for creating a subtree filter.
     * The added "deactivate-bearer-retry-n3495" leaf will not have a value.
     */
    public void addDeactivateBearerRetryN3495() throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "deactivate-bearer-retry-n3495",
            null,
            childrenNames());
    }

    /**
     * Marks the leaf "deactivate-bearer-retry-n3495" with operation "replace".
     */
    public void markDeactivateBearerRetryN3495Replace() throws JNCException {
        markLeafReplace("deactivateBearerRetryN3495");
    }

    /**
     * Marks the leaf "deactivate-bearer-retry-n3495" with operation "merge".
     */
    public void markDeactivateBearerRetryN3495Merge() throws JNCException {
        markLeafMerge("deactivateBearerRetryN3495");
    }

    /**
     * Marks the leaf "deactivate-bearer-retry-n3495" with operation "create".
     */
    public void markDeactivateBearerRetryN3495Create() throws JNCException {
        markLeafCreate("deactivateBearerRetryN3495");
    }

    /**
     * Marks the leaf "deactivate-bearer-retry-n3495" with operation "delete".
     */
    public void markDeactivateBearerRetryN3495Delete() throws JNCException {
        markLeafDelete("deactivateBearerRetryN3495");
    }

    /* Access methods for optional leaf child: "max-bearers-per-ue". */

    /**
     * Gets the value for child leaf "max-bearers-per-ue".
     * @return The value of the leaf.
     */
    public YangUInt8 getMaxBearersPerUeValue() throws JNCException {
        YangUInt8 maxBearersPerUe = (YangUInt8)getValue("max-bearers-per-ue");
        if (maxBearersPerUe == null) {
            maxBearersPerUe = new YangUInt8("7");  // default
        }
        return maxBearersPerUe;
    }

    /**
     * Sets the value for child leaf "max-bearers-per-ue",
     * using instance of generated typedef class.
     * @param maxBearersPerUeValue The value to set.
     * @param maxBearersPerUeValue used during instantiation.
     */
    public void setMaxBearersPerUeValue(YangUInt8 maxBearersPerUeValue)
            throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "max-bearers-per-ue",
            maxBearersPerUeValue,
            childrenNames());
    }

    /**
     * Sets the value for child leaf "max-bearers-per-ue",
     * using Java primitive values.
     * @param maxBearersPerUeValue used during instantiation.
     */
    public void setMaxBearersPerUeValue(short maxBearersPerUeValue)
            throws JNCException {
        setMaxBearersPerUeValue(new YangUInt8(maxBearersPerUeValue));
    }

    /**
     * Sets the value for child leaf "max-bearers-per-ue",
     * using a String value.
     * @param maxBearersPerUeValue used during instantiation.
     */
    public void setMaxBearersPerUeValue(String maxBearersPerUeValue)
            throws JNCException {
        setMaxBearersPerUeValue(new YangUInt8(maxBearersPerUeValue));
    }

    /**
     * Unsets the value for child leaf "max-bearers-per-ue".
     */
    public void unsetMaxBearersPerUeValue() throws JNCException {
        delete("max-bearers-per-ue");
    }

    /**
     * This method is used for creating a subtree filter.
     * The added "max-bearers-per-ue" leaf will not have a value.
     */
    public void addMaxBearersPerUe() throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "max-bearers-per-ue",
            null,
            childrenNames());
    }

    /**
     * Marks the leaf "max-bearers-per-ue" with operation "replace".
     */
    public void markMaxBearersPerUeReplace() throws JNCException {
        markLeafReplace("maxBearersPerUe");
    }

    /**
     * Marks the leaf "max-bearers-per-ue" with operation "merge".
     */
    public void markMaxBearersPerUeMerge() throws JNCException {
        markLeafMerge("maxBearersPerUe");
    }

    /**
     * Marks the leaf "max-bearers-per-ue" with operation "create".
     */
    public void markMaxBearersPerUeCreate() throws JNCException {
        markLeafCreate("maxBearersPerUe");
    }

    /**
     * Marks the leaf "max-bearers-per-ue" with operation "delete".
     */
    public void markMaxBearersPerUeDelete() throws JNCException {
        markLeafDelete("maxBearersPerUe");
    }

    /* Access methods for optional leaf child: "max-pdn-conn-per-ue". */

    /**
     * Gets the value for child leaf "max-pdn-conn-per-ue".
     * @return The value of the leaf.
     */
    public YangUInt8 getMaxPdnConnPerUeValue() throws JNCException {
        YangUInt8 maxPdnConnPerUe = (YangUInt8)getValue("max-pdn-conn-per-ue");
        if (maxPdnConnPerUe == null) {
            maxPdnConnPerUe = new YangUInt8("8");  // default
        }
        return maxPdnConnPerUe;
    }

    /**
     * Sets the value for child leaf "max-pdn-conn-per-ue",
     * using instance of generated typedef class.
     * @param maxPdnConnPerUeValue The value to set.
     * @param maxPdnConnPerUeValue used during instantiation.
     */
    public void setMaxPdnConnPerUeValue(YangUInt8 maxPdnConnPerUeValue)
            throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "max-pdn-conn-per-ue",
            maxPdnConnPerUeValue,
            childrenNames());
    }

    /**
     * Sets the value for child leaf "max-pdn-conn-per-ue",
     * using Java primitive values.
     * @param maxPdnConnPerUeValue used during instantiation.
     */
    public void setMaxPdnConnPerUeValue(short maxPdnConnPerUeValue)
            throws JNCException {
        setMaxPdnConnPerUeValue(new YangUInt8(maxPdnConnPerUeValue));
    }

    /**
     * Sets the value for child leaf "max-pdn-conn-per-ue",
     * using a String value.
     * @param maxPdnConnPerUeValue used during instantiation.
     */
    public void setMaxPdnConnPerUeValue(String maxPdnConnPerUeValue)
            throws JNCException {
        setMaxPdnConnPerUeValue(new YangUInt8(maxPdnConnPerUeValue));
    }

    /**
     * Unsets the value for child leaf "max-pdn-conn-per-ue".
     */
    public void unsetMaxPdnConnPerUeValue() throws JNCException {
        delete("max-pdn-conn-per-ue");
    }

    /**
     * This method is used for creating a subtree filter.
     * The added "max-pdn-conn-per-ue" leaf will not have a value.
     */
    public void addMaxPdnConnPerUe() throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "max-pdn-conn-per-ue",
            null,
            childrenNames());
    }

    /**
     * Marks the leaf "max-pdn-conn-per-ue" with operation "replace".
     */
    public void markMaxPdnConnPerUeReplace() throws JNCException {
        markLeafReplace("maxPdnConnPerUe");
    }

    /**
     * Marks the leaf "max-pdn-conn-per-ue" with operation "merge".
     */
    public void markMaxPdnConnPerUeMerge() throws JNCException {
        markLeafMerge("maxPdnConnPerUe");
    }

    /**
     * Marks the leaf "max-pdn-conn-per-ue" with operation "create".
     */
    public void markMaxPdnConnPerUeCreate() throws JNCException {
        markLeafCreate("maxPdnConnPerUe");
    }

    /**
     * Marks the leaf "max-pdn-conn-per-ue" with operation "delete".
     */
    public void markMaxPdnConnPerUeDelete() throws JNCException {
        markLeafDelete("maxPdnConnPerUe");
    }

    /* Access methods for optional leaf child: "deactivate-bearer-page-fail". */

    /**
     * Gets the value for child leaf "deactivate-bearer-page-fail".
     * @return The value of the leaf.
     */
    public YangEnumeration getDeactivateBearerPageFailValue()
            throws JNCException {
        YangEnumeration deactivateBearerPageFail = (YangEnumeration)getValue("deactivate-bearer-page-fail");
        if (deactivateBearerPageFail == null) {
            deactivateBearerPageFail = new YangEnumeration("disable", new String[] {  // default
                "enable",
                "disable",
            });
        }
        return deactivateBearerPageFail;
    }

    /**
     * Sets the value for child leaf "deactivate-bearer-page-fail",
     * using instance of generated typedef class.
     * @param deactivateBearerPageFailValue The value to set.
     * @param deactivateBearerPageFailValue used during instantiation.
     */
    public void setDeactivateBearerPageFailValue(YangEnumeration deactivateBearerPageFailValue)
            throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "deactivate-bearer-page-fail",
            deactivateBearerPageFailValue,
            childrenNames());
    }

    /**
     * Sets the value for child leaf "deactivate-bearer-page-fail",
     * using a String value.
     * @param deactivateBearerPageFailValue used during instantiation.
     */
    public void setDeactivateBearerPageFailValue(String deactivateBearerPageFailValue)
            throws JNCException {
        setDeactivateBearerPageFailValue(new YangEnumeration(deactivateBearerPageFailValue, new String[] {
             "enable",
             "disable",
        }));
    }

    /**
     * Unsets the value for child leaf "deactivate-bearer-page-fail".
     */
    public void unsetDeactivateBearerPageFailValue() throws JNCException {
        delete("deactivate-bearer-page-fail");
    }

    /**
     * This method is used for creating a subtree filter.
     * The added "deactivate-bearer-page-fail" leaf will not have a value.
     */
    public void addDeactivateBearerPageFail() throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "deactivate-bearer-page-fail",
            null,
            childrenNames());
    }

    /**
     * Marks the leaf "deactivate-bearer-page-fail" with operation "replace".
     */
    public void markDeactivateBearerPageFailReplace() throws JNCException {
        markLeafReplace("deactivateBearerPageFail");
    }

    /**
     * Marks the leaf "deactivate-bearer-page-fail" with operation "merge".
     */
    public void markDeactivateBearerPageFailMerge() throws JNCException {
        markLeafMerge("deactivateBearerPageFail");
    }

    /**
     * Marks the leaf "deactivate-bearer-page-fail" with operation "create".
     */
    public void markDeactivateBearerPageFailCreate() throws JNCException {
        markLeafCreate("deactivateBearerPageFail");
    }

    /**
     * Marks the leaf "deactivate-bearer-page-fail" with operation "delete".
     */
    public void markDeactivateBearerPageFailDelete() throws JNCException {
        markLeafDelete("deactivateBearerPageFail");
    }

    /* Access methods for optional leaf child: "pgw-ip-type". */

    /**
     * Gets the value for child leaf "pgw-ip-type".
     * @return The value of the leaf.
     */
    public YangEnumeration getPgwIpTypeValue() throws JNCException {
        YangEnumeration pgwIpType = (YangEnumeration)getValue("pgw-ip-type");
        if (pgwIpType == null) {
            pgwIpType = new YangEnumeration("ipv4ipv6", new String[] {  // default
                "ipv4",
                "ipv4ipv6",
            });
        }
        return pgwIpType;
    }

    /**
     * Sets the value for child leaf "pgw-ip-type",
     * using instance of generated typedef class.
     * @param pgwIpTypeValue The value to set.
     * @param pgwIpTypeValue used during instantiation.
     */
    public void setPgwIpTypeValue(YangEnumeration pgwIpTypeValue)
            throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "pgw-ip-type",
            pgwIpTypeValue,
            childrenNames());
    }

    /**
     * Sets the value for child leaf "pgw-ip-type",
     * using a String value.
     * @param pgwIpTypeValue used during instantiation.
     */
    public void setPgwIpTypeValue(String pgwIpTypeValue) throws JNCException {
        setPgwIpTypeValue(new YangEnumeration(pgwIpTypeValue, new String[] {
             "ipv4",
             "ipv4ipv6",
        }));
    }

    /**
     * Unsets the value for child leaf "pgw-ip-type".
     */
    public void unsetPgwIpTypeValue() throws JNCException {
        delete("pgw-ip-type");
    }

    /**
     * This method is used for creating a subtree filter.
     * The added "pgw-ip-type" leaf will not have a value.
     */
    public void addPgwIpType() throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "pgw-ip-type",
            null,
            childrenNames());
    }

    /**
     * Marks the leaf "pgw-ip-type" with operation "replace".
     */
    public void markPgwIpTypeReplace() throws JNCException {
        markLeafReplace("pgwIpType");
    }

    /**
     * Marks the leaf "pgw-ip-type" with operation "merge".
     */
    public void markPgwIpTypeMerge() throws JNCException {
        markLeafMerge("pgwIpType");
    }

    /**
     * Marks the leaf "pgw-ip-type" with operation "create".
     */
    public void markPgwIpTypeCreate() throws JNCException {
        markLeafCreate("pgwIpType");
    }

    /**
     * Marks the leaf "pgw-ip-type" with operation "delete".
     */
    public void markPgwIpTypeDelete() throws JNCException {
        markLeafDelete("pgwIpType");
    }

    /* Access methods for optional leaf child: "deactivate-bearer-enodeb-fail". */

    /**
     * Gets the value for child leaf "deactivate-bearer-enodeb-fail".
     * @return The value of the leaf.
     */
    public YangEnumeration getDeactivateBearerEnodebFailValue()
            throws JNCException {
        YangEnumeration deactivateBearerEnodebFail = (YangEnumeration)getValue("deactivate-bearer-enodeb-fail");
        if (deactivateBearerEnodebFail == null) {
            deactivateBearerEnodebFail = new YangEnumeration("disable", new String[] {  // default
                "enable",
                "disable",
            });
        }
        return deactivateBearerEnodebFail;
    }

    /**
     * Sets the value for child leaf "deactivate-bearer-enodeb-fail",
     * using instance of generated typedef class.
     * @param deactivateBearerEnodebFailValue The value to set.
     * @param deactivateBearerEnodebFailValue used during instantiation.
     */
    public void setDeactivateBearerEnodebFailValue(YangEnumeration deactivateBearerEnodebFailValue)
            throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "deactivate-bearer-enodeb-fail",
            deactivateBearerEnodebFailValue,
            childrenNames());
    }

    /**
     * Sets the value for child leaf "deactivate-bearer-enodeb-fail",
     * using a String value.
     * @param deactivateBearerEnodebFailValue used during instantiation.
     */
    public void setDeactivateBearerEnodebFailValue(String deactivateBearerEnodebFailValue)
            throws JNCException {
        setDeactivateBearerEnodebFailValue(new YangEnumeration(deactivateBearerEnodebFailValue, new String[] {
             "enable",
             "disable",
        }));
    }

    /**
     * Unsets the value for child leaf "deactivate-bearer-enodeb-fail".
     */
    public void unsetDeactivateBearerEnodebFailValue() throws JNCException {
        delete("deactivate-bearer-enodeb-fail");
    }

    /**
     * This method is used for creating a subtree filter.
     * The added "deactivate-bearer-enodeb-fail" leaf will not have a value.
     */
    public void addDeactivateBearerEnodebFail() throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "deactivate-bearer-enodeb-fail",
            null,
            childrenNames());
    }

    /**
     * Marks the leaf "deactivate-bearer-enodeb-fail" with operation "replace".
     */
    public void markDeactivateBearerEnodebFailReplace() throws JNCException {
        markLeafReplace("deactivateBearerEnodebFail");
    }

    /**
     * Marks the leaf "deactivate-bearer-enodeb-fail" with operation "merge".
     */
    public void markDeactivateBearerEnodebFailMerge() throws JNCException {
        markLeafMerge("deactivateBearerEnodebFail");
    }

    /**
     * Marks the leaf "deactivate-bearer-enodeb-fail" with operation "create".
     */
    public void markDeactivateBearerEnodebFailCreate() throws JNCException {
        markLeafCreate("deactivateBearerEnodebFail");
    }

    /**
     * Marks the leaf "deactivate-bearer-enodeb-fail" with operation "delete".
     */
    public void markDeactivateBearerEnodebFailDelete() throws JNCException {
        markLeafDelete("deactivateBearerEnodebFail");
    }

    /* Access methods for optional leaf child: "pcscf-restore-mod-fail-action". */

    /**
     * Gets the value for child leaf "pcscf-restore-mod-fail-action".
     * @return The value of the leaf.
     */
    public YangEnumeration getPcscfRestoreModFailActionValue()
            throws JNCException {
        YangEnumeration pcscfRestoreModFailAction = (YangEnumeration)getValue("pcscf-restore-mod-fail-action");
        if (pcscfRestoreModFailAction == null) {
            pcscfRestoreModFailAction = new YangEnumeration("ignore", new String[] {  // default
                "deactivate",
                "ignore",
            });
        }
        return pcscfRestoreModFailAction;
    }

    /**
     * Sets the value for child leaf "pcscf-restore-mod-fail-action",
     * using instance of generated typedef class.
     * @param pcscfRestoreModFailActionValue The value to set.
     * @param pcscfRestoreModFailActionValue used during instantiation.
     */
    public void setPcscfRestoreModFailActionValue(YangEnumeration pcscfRestoreModFailActionValue)
            throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "pcscf-restore-mod-fail-action",
            pcscfRestoreModFailActionValue,
            childrenNames());
    }

    /**
     * Sets the value for child leaf "pcscf-restore-mod-fail-action",
     * using a String value.
     * @param pcscfRestoreModFailActionValue used during instantiation.
     */
    public void setPcscfRestoreModFailActionValue(String pcscfRestoreModFailActionValue)
            throws JNCException {
        setPcscfRestoreModFailActionValue(new YangEnumeration(pcscfRestoreModFailActionValue, new String[] {
             "deactivate",
             "ignore",
        }));
    }

    /**
     * Unsets the value for child leaf "pcscf-restore-mod-fail-action".
     */
    public void unsetPcscfRestoreModFailActionValue() throws JNCException {
        delete("pcscf-restore-mod-fail-action");
    }

    /**
     * This method is used for creating a subtree filter.
     * The added "pcscf-restore-mod-fail-action" leaf will not have a value.
     */
    public void addPcscfRestoreModFailAction() throws JNCException {
        setLeafValue(Epc.NAMESPACE,
            "pcscf-restore-mod-fail-action",
            null,
            childrenNames());
    }

    /**
     * Marks the leaf "pcscf-restore-mod-fail-action" with operation "replace".
     */
    public void markPcscfRestoreModFailActionReplace() throws JNCException {
        markLeafReplace("pcscfRestoreModFailAction");
    }

    /**
     * Marks the leaf "pcscf-restore-mod-fail-action" with operation "merge".
     */
    public void markPcscfRestoreModFailActionMerge() throws JNCException {
        markLeafMerge("pcscfRestoreModFailAction");
    }

    /**
     * Marks the leaf "pcscf-restore-mod-fail-action" with operation "create".
     */
    public void markPcscfRestoreModFailActionCreate() throws JNCException {
        markLeafCreate("pcscfRestoreModFailAction");
    }

    /**
     * Marks the leaf "pcscf-restore-mod-fail-action" with operation "delete".
     */
    public void markPcscfRestoreModFailActionDelete() throws JNCException {
        markLeafDelete("pcscfRestoreModFailAction");
    }

    /**
     * Support method for addChild.
     * Adds a child to this object.
     * 
     * @param child The child to add
     */
    public void addChild(Element child) {
        super.addChild(child);
    }

}
